pipeline {
    agent any

    environment {
        APP_NAME = "library"
        JAR_NAME = "library-0.0.1-SNAPSHOT.jar"
        DOCKER_IMAGE = "library-app"
        DOCKER_CONTAINER = "library-container"
        COMPOSE_FILE = ""     // Se define din√°micamente
        ENV_FILE_PATH = ""    // Se define din√°micamente
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: "${env.BRANCH_NAME}", credentialsId: "github_PAT", url: "https://github.com/mromer08/test-jenkins.git"
            }
        }

        stage('Set Environment') {
            steps {
                script {
                    if (env.BRANCH_NAME == "main") {
                        COMPOSE_FILE = "docker-compose.prod.yml"
                        ENV_FILE_PATH = "env_file_prod"
                    } else if (env.BRANCH_NAME == "development") {
                        COMPOSE_FILE = "docker-compose.dev.yml"
                        ENV_FILE_PATH = "env_file_dev"
                    } else {
                        error "‚ùå Rama ${env.BRANCH_NAME} no soportada para despliegue"
                    }
                }
            }
        }

        stage('Build Application') {
            steps {
                script {
                    sh """
                        echo "üîß Construyendo aplicaci√≥n con Maven..."
                        cd app/backend
                        ./mvnw clean package -DskipTests
                    """
                }
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                withCredentials([file(credentialsId: "${ENV_FILE_PATH}", variable: 'ENV_FILE')]) {
                    script {
                        sh """
                            echo "üì¶ Usando archivo de entorno: \$ENV_FILE"
                            cp \$ENV_FILE app/backend/.env

                            echo "üßπ Deteniendo y eliminando contenedor anterior..."
                            docker compose -f app/backend/${COMPOSE_FILE} down || true

                            echo "üöÄ Desplegando con ${COMPOSE_FILE}..."
                            cd app/backend
                            docker compose -f ${COMPOSE_FILE} up --build -d
                        """
                    }
                }
            }
        }
    }
}
