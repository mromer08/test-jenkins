pipeline {
    agent any

    environment {
        APP_NAME = "library"
        JAR_NAME = "library-0.0.1-SNAPSHOT.jar"
        DOCKER_IMAGE = "library-app2"
        DOCKER_CONTAINER = "library-container2"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: "main", credentialsId: "github_PAT", url: "https://github.com/mromer08/test-jenkins.git"
            }
        }

        stage('Build Application') {
            steps {
                script {
                    sh """
                        echo "Construyendo aplicaciÃ³n con Maven..."
                        cd app/backend
                        ./mvnw clean package -DskipTests
                    """
                }
            }
        }

        // stage('Build Docker Image') {
        //     steps {
        //         script {
        //             sh """
        //                 echo "ðŸ”¹ Construyendo imagen Docker sin cachÃ©..."
        //                 cd app/backend
        //                 docker build ${DOCKER_IMAGE} .
        //             """
        //         }
        //     }
        // }


        stage('Deploy with Docker Compose') {
            steps {
                withCredentials([file(credentialsId: 'env_file', variable: 'ENV_FILE')]) {
                    script {
                        sh """
                            echo "ðŸ”¹ Copiando archivo .env desde Jenkins..."
                            cp \$ENV_FILE app/backend/.env

                            echo "ðŸ”¹ Eliminando contenedor anterior si existe..."
                            docker compose -f app/backend/docker-compose.yml down || true

                            echo "ðŸš€ Iniciando la nueva versiÃ³n..."
                            cd app/backend
                            docker compose up --build -d
                        """
                    }
                }
            }
        }
    }
}
