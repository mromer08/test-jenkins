pipeline {
    agent any

    environment {
        APP_NAME = "library"
        JAR_NAME = "library-0.0.1-SNAPSHOT.jar"
        COMPOSE_FILE = ""     // Se define dinÃ¡micamente
        ENV_FILE_PATH = ""    // Se define dinÃ¡micamente
    }

    stages {
        stage('Build Application') {
            steps {
                script {
                    sh """
                        echo "ðŸ”§ Construyendo aplicaciÃ³n con Maven..."
                        cd app/backend
                        ./mvnw clean package -DskipTests
                    """
                }
            }
        }

        stage('Deploy with Docker Compose for Prod') {
            when {
                branch 'main'
            }
            environment {
                COMPOSE_FILE = "docker-compose.prod.yml"
                ENV_FILE_PATH = "env_file_prod"
            }
            steps {
                withCredentials([file(credentialsId: "${ENV_FILE_PATH}", variable: 'ENV_FILE')]) {
                    script {
                        sh """
                            echo "ðŸ“¦ Usando archivo de entorno: \$ENV_FILE"
                            cp \$ENV_FILE app/backend/.env

                            echo "ðŸ§¹ Deteniendo y eliminando contenedor de producciÃ³n..."
                            docker compose -p ${APP_NAME}-prod -f app/backend/${COMPOSE_FILE} down || true

                            echo "ðŸš€ Desplegando con ${COMPOSE_FILE}..."
                            cd app/backend
                            docker compose -p ${APP_NAME}-prod -f ${COMPOSE_FILE} up --build -d
                        """
                    }
                }
            }
        }

        stage('Deploy with Docker Compose for Dev') {
            when {
                branch 'development'
            }
            environment {
                COMPOSE_FILE = "docker-compose.dev.yml"
                ENV_FILE_PATH = "env_file_dev"
            }
            steps {
                withCredentials([file(credentialsId: "${ENV_FILE_PATH}", variable: 'ENV_FILE')]) {
                    script {
                        sh """
                            echo "ðŸ“¦ Usando archivo de entorno: \$ENV_FILE"
                            cp \$ENV_FILE app/backend/.env

                            echo "ðŸ§¹ Deteniendo y eliminando contenedor de desarrollo..."
                            docker compose -p ${APP_NAME}-dev -f app/backend/${COMPOSE_FILE} down || true

                            echo "ðŸš€ Desplegando con ${COMPOSE_FILE}..."
                            cd app/backend
                            docker compose -p ${APP_NAME}-dev -f ${COMPOSE_FILE} up --build -d
                        """
                    }
                }
            }
        }
    }
}